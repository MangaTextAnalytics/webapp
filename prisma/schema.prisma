// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  libary        Library?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Manga {
  id     Int    @id @default(autoincrement())
  title  String
  author String
  year   Int
  volume Int
  uniqueWords Int
  totalWords  Int
  wordsUsedOnce Int
  wordsUsedOncePct Float

  frequencies Frequency[]
  libraries   Library[]
}

model LibraryFrequency {
  id       Int    @id @default(autoincrement())

  count    Int
  termTerm String
  library_id Int

  term     Term   @relation(fields: [termTerm], references: [term])
  library  Library  @relation(fields: [library_id], references: [id])

  @@unique([termTerm, library_id])
}

model Frequency {
  id       Int    @id @default(autoincrement())

  count    Int
  termTerm String
  manga_id Int

  term     Term   @relation(fields: [termTerm], references: [term])
  manga    Manga  @relation(fields: [manga_id], references: [id])

  @@unique([termTerm, manga_id])
}

model Term {
  term      String      @id
  Frequency Frequency[]
  LibraryFrequency LibraryFrequency[]
}

model Library {
  id     Int    @id @default(autoincrement())
  userId String @unique
  uniqueWords Int @default(0)
  totalWords  Int @default(0)
  wordsUsedOnce Int @default(0)
  wordsUsedOncePct Float @default(0)

  user   User   @relation(fields: [userId], references: [id])
  mangas Manga[]
  libraryFrequencies LibraryFrequency[]
}
