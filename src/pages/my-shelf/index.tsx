import Head from "next/head";
import PageWithTopbar from "~/components/PageWithTopbar";
import { api } from "~/utils/api";
import Frequencies from "~/components/Frequencies";
import { CardStats, MangaCardInfo } from "~/components/MangaCard";
import Link from "next/link";
import { Manga } from "@prisma/client";

export default function Library() {
  const { data: library, isLoading } = api.libraries.getCurrentLibrary.useQuery();
  const { data: mangas } = api.mangas.getForLibrary.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <PageWithTopbar>
          <div className="flex flex-col max-w-[950px] mx-auto gap-4 p-8 bg-canvas">
            {isLoading && <p>Loading...</p>}
            {library && (
              <>
                <div key={library.id} className="flex gap-8">
                  <div className="flex flex-col">
                    <h2 className="text-2xl font-semibold">Library</h2>
                  </div>
                  <CardStats ownerId={library.id} type="library" />
                </div>
                <hr/>
                <h2 className="text-2xl font-semibold">Mangas</h2>
                <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3">
                  {mangas && mangas.map((manga) => (
                    <MangaCard key={manga.id} manga={manga} />
                  ))}
                  {mangas && mangas.length === 0 && (
                    <p className="text-lg">
                      No mangas in library <Link href="/mangas" className="text-primaryPurple hover:underline">Add some!</Link>
                    </p>
                  )}
                </div>
                <hr/>
                <Frequencies ownerId={library.id} type="library" />
              </>
            )}
          </div>
        </PageWithTopbar>
      </main>
    </>
  );
}

const MangaCard: React.FC<{ manga: Manga }> = ({ manga }) => {
  const { mutate } = api.libraries.updateMangaLibrary.useMutation();

  return (
    <div className="mx-2 relative">
      <Link 
        href={`/mangas/${manga.id}`} 
        className="block relative z-1 p-4 rounded-lg border border-2 border-fgMuted transition-all duration-150 hover:border-primaryPurple hover:shadow-md"
      >
        <MangaCardInfo key={manga.id} title={manga.title} author={manga.author} year={manga.year} />
      </Link>
      <button 
        className="absolute top-2 text-sm right-2 z-2 rounded-lg py-1 px-2 bg-primaryPurple font-semibold text-canvasInset border-2 border-transparent hover:border-primaryPurple hover:bg-canvasInset hover:text-primaryPurple transition-all duration-150"
        onClick={() => mutate({ mangaId: manga.id, add: false })}
      >
        Remove
      </button>
    </div>
  );
};
